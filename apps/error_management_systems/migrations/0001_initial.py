# Generated by Django 3.2.6 on 2025-03-20 10:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorEvent',
            fields=[
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('system_name', models.CharField(max_length=50, verbose_name='System Name')),
                ('service_type', models.CharField(max_length=100, verbose_name='Service Type')),
                ('service_name', models.CharField(max_length=100, verbose_name='Service Name')),
                ('error_reason', models.TextField(verbose_name='Error Reason')),
                ('error_count', models.IntegerField(verbose_name='Error Count')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
                ('inserted_by', models.CharField(max_length=50, verbose_name='Inserted by')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Error Event',
                'verbose_name_plural': 'Error Events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ErrorTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_reference', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('priorite', models.CharField(choices=[('P1', 'Critical'), ('P2', 'High'), ('P3', 'Normal'), ('P4', 'Low')], default='P3', max_length=2, verbose_name='Priority')),
                ('statut', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('PENDING', 'Pending'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='OPEN', max_length=15, verbose_name='Status')),
                ('niveau_criticite', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=3, verbose_name='Criticality Level (1-5)')),
                ('symptomes', models.TextField(blank=True, verbose_name='Observed Symptoms')),
                ('impact', models.TextField(blank=True, verbose_name='User Impact')),
                ('services_affectes', models.TextField(blank=True, verbose_name='Affected Services')),
                ('charge_systeme', models.IntegerField(blank=True, null=True, verbose_name='System Load')),
                ('nombre_utilisateurs', models.IntegerField(blank=True, null=True, verbose_name='Impacted Users')),
                ('cause_racine', models.TextField(blank=True, verbose_name='Root Cause')),
                ('hypotheses', models.TextField(blank=True, verbose_name='Hypotheses')),
                ('responsable', models.CharField(blank=True, max_length=100, verbose_name='Responsible')),
                ('equipe', models.CharField(blank=True, max_length=100, verbose_name='Assigned Team')),
                ('actions', models.TextField(blank=True, verbose_name='Planned Actions')),
                ('solution', models.TextField(blank=True, verbose_name='Implemented Solution')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('date_resolution', models.DateTimeField(blank=True, null=True, verbose_name='Resolution Date')),
                ('commentaires', models.TextField(blank=True, verbose_name='Comments')),
                ('historique', models.JSONField(blank=True, default=dict, verbose_name='Modification History')),
                ('lessons_learned', models.TextField(blank=True, verbose_name='Lessons Learned')),
                ('validation_responsable', models.BooleanField(default=False, verbose_name='Validated by Responsible')),
                ('documented_knowledge_base', models.BooleanField(default=False, verbose_name='Documented in Knowledge Base')),
            ],
            options={
                'verbose_name': 'Error Ticket',
                'verbose_name_plural': 'Error Tickets',
            },
        ),
        migrations.CreateModel(
            name='ErrorType',
            fields=[
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('system_name', models.CharField(max_length=50, verbose_name='System Name')),
                ('service_type', models.CharField(max_length=100, verbose_name='Service Type')),
                ('service_name', models.CharField(max_length=100, verbose_name='Service Name')),
                ('error_reason', models.TextField(verbose_name='Error Reason')),
                ('type_error', models.CharField(choices=[('expected', 'Expected'), ('unexpected', 'Unexpected')], default='unexpected', max_length=50, verbose_name='Type Error')),
                ('error_category', models.CharField(choices=[('logic', 'Logic'), ('performance', 'Performance'), ('security', 'Security'), ('integration', 'Integration'), ('data', 'Data'), ('configuration', 'Configuration')], default='logic', max_length=50, verbose_name='Error Category')),
                ('impact_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20, verbose_name='Impact Level')),
                ('trigger_event', models.TextField(blank=True, verbose_name='Trigger Event')),
                ('occurred_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Occurrence Timestamp')),
                ('source_component', models.CharField(blank=True, max_length=100, verbose_name='Source Component')),
                ('code_erreur', models.CharField(blank=True, max_length=50, verbose_name='Error Code')),
                ('fichiers_impactes', models.TextField(blank=True, verbose_name='Impacted Files/Modules')),
                ('request_payload', models.JSONField(blank=True, null=True, verbose_name='Request Payload')),
                ('stack_trace', models.TextField(blank=True, verbose_name='Stack Trace')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
            ],
            options={
                'verbose_name': 'Error Type',
                'verbose_name_plural': 'Error Types',
            },
        ),
        migrations.AddConstraint(
            model_name='errortype',
            constraint=models.UniqueConstraint(fields=('system_name', 'service_name', 'error_reason'), name='unique_system_error_reason'),
        ),
        migrations.AddField(
            model_name='errorticket',
            name='error_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ticket', to='error_management_systems.errortype', verbose_name='Error Type'),
        ),
        migrations.AddField(
            model_name='errorevent',
            name='error_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='error_management_systems.errortype', verbose_name='Error Type'),
        ),
    ]
