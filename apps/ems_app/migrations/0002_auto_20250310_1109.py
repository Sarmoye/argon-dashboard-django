# Generated by Django 3.2.6 on 2025-03-10 11:09

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('ems_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorEvent1',
            fields=[
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('system_name', models.CharField(max_length=50, verbose_name='Nom du système')),
                ('service_type', models.CharField(max_length=100, verbose_name='Type de service')),
                ('service_name', models.CharField(max_length=100, verbose_name='Nom du service')),
                ('error_reason', models.TextField(verbose_name="Raison de l'erreur")),
                ('error_count', models.IntegerField(verbose_name="Nombre d'erreurs")),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Horodatage')),
                ('inserted_by', models.CharField(max_length=50, verbose_name='Enregistré par')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': "Événement d'erreur",
                'verbose_name_plural': "Événements d'erreurs",
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ErrorTicket1',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('priorite', models.CharField(choices=[('P1', 'Critique'), ('P2', 'Haute'), ('P3', 'Normale'), ('P4', 'Basse')], default='P3', max_length=2, verbose_name='Priorité')),
                ('statut', models.CharField(choices=[('OPEN', 'Ouvert'), ('IN_PROGRESS', 'En cours'), ('PENDING', 'En attente'), ('RESOLVED', 'Résolu'), ('CLOSED', 'Fermé')], default='OPEN', max_length=15, verbose_name='Statut')),
                ('niveau_criticite', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=3, verbose_name='Criticité (1-5)')),
                ('symptomes', models.TextField(blank=True, verbose_name='Symptômes observés')),
                ('impact', models.TextField(blank=True, verbose_name='Impact utilisateur')),
                ('services_affectes', models.TextField(blank=True, verbose_name='Services affectés')),
                ('charge_systeme', models.IntegerField(blank=True, null=True, verbose_name='Charge système')),
                ('nombre_utilisateurs', models.IntegerField(blank=True, null=True, verbose_name='Utilisateurs impactés')),
                ('cause_racine', models.TextField(blank=True, verbose_name='Cause racine')),
                ('hypotheses', models.TextField(blank=True, verbose_name='Hypothèses')),
                ('responsable', models.CharField(blank=True, max_length=100, verbose_name='Responsable')),
                ('equipe', models.CharField(blank=True, max_length=100, verbose_name='Équipe assignée')),
                ('actions', models.TextField(blank=True, verbose_name='Actions prévues')),
                ('solution', models.TextField(blank=True, verbose_name='Solution implémentée')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('date_resolution', models.DateTimeField(blank=True, null=True, verbose_name='Date de résolution')),
                ('commentaires', models.TextField(blank=True, verbose_name='Commentaires')),
                ('historique', models.JSONField(blank=True, default=dict, verbose_name='Historique des modifications')),
            ],
            options={
                'verbose_name': "Ticket d'erreur",
                'verbose_name_plural': "Tickets d'erreurs",
            },
        ),
        migrations.CreateModel(
            name='ErrorType1',
            fields=[
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('system_name', models.CharField(max_length=50, verbose_name='Nom du système')),
                ('service_type', models.CharField(max_length=100, verbose_name='Type de service')),
                ('service_name', models.CharField(max_length=100, verbose_name='Nom du service')),
                ('error_reason', models.TextField(verbose_name="Raison de l'erreur")),
                ('code_erreur', models.CharField(blank=True, max_length=50, verbose_name='Code d’erreur')),
                ('fichiers_impactes', models.TextField(blank=True, verbose_name='Fichiers/modules impactés')),
                ('logs', models.TextField(blank=True, verbose_name='Messages de logs')),
                ('description_technique', models.TextField(blank=True, verbose_name='Description technique détaillée')),
                ('comportement_attendu', models.TextField(blank=True, verbose_name='Comportement attendu')),
                ('procedures_contournement', models.TextField(blank=True, verbose_name='Procédures de contournement')),
                ('environnement', models.CharField(blank=True, max_length=100, verbose_name='Environnement (OS, version, etc.)')),
                ('niveau_severite', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Niveau de sévérité (1-5)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': "Type d'erreur",
                'verbose_name_plural': "Types d'erreurs",
            },
        ),
        migrations.AddConstraint(
            model_name='errortype1',
            constraint=models.UniqueConstraint(fields=('system_name', 'error_reason'), name='unique_system_error_reason1'),
        ),
        migrations.AddField(
            model_name='errorticket1',
            name='error_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ticket1', to='ems_app.errortype1', verbose_name="Type d'erreur"),
        ),
        migrations.AddField(
            model_name='errorevent1',
            name='error_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events1', to='ems_app.errortype1', verbose_name="Type d'erreur"),
        ),
    ]
